---
import type { GetStaticPaths } from "astro";
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemones/PokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list-response";
import Title from "@components/shared/Title.astro";
import { Icon} from 'astro-icon/components';

export const getStaticPaths = (async() => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = await resp.json() as PokemonListResponse;
  return results.map(({name, url}) => ({
      params: { name}, 
      props: {name,   url}
    
  }))
  
}) satisfies GetStaticPaths;

const {name} = Astro.params;
const {url} = Astro.props;
const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imgSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`


---
<MainLayout 
title={`Pokémon - #${id} ${name}`}
description={`Todo dobre el pokémon ${name}`}
image={imgSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex  flex-tow">
      <div>
        <button 
        onclick="history.back()"
        class="text-blue-500">Regresar</button>
        </div>
    <button id="btn-favorite" class="ml-4 text-pink-700" data-name={name}data-id={id} >
      <Icon name="heart-outline" size={50}></Icon>
      <Icon class="hidden" name="heart-full" size={50}></Icon>
    </button>
        
    </div>
    <Title>{name}</Title>
    <PokemonCard 
    name={name} 
    url={`https://pokeapi.co/api/v2/pokemon/${url}`} 
    isBig 
    
    /> 

    <audio controls class="mt-5">
        <source src={audioSrc} type="audio/ogg">
        No soportado el audio
      </audio>
  </section>

</MainLayout>
<script>
  interface FavoritePokemon {
    name: string;
    id: number;
  }

  const handlePageLoad = () => {
    const btnFavorite = document.querySelector("#btn-favorite") as HTMLButtonElement;
    if(!btnFavorite) return;
  const name = btnFavorite.dataset.name;
  const id = btnFavorite.dataset.id;
  btnFavorite.addEventListener("click", () => {
    console.log({name, id})
  })
  }


  document.addEventListener('astro:page-load', handlePageLoad)



</script>
<style>
  a{
    @apply hover:underline text-blue-500;
  }
  #btn-favorite{
    @apply hover:animate-pulse;
  }
</style>